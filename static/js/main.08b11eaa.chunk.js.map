{"version":3,"sources":["logo.svg","loadingSpinner.js","dbdb.js","reducer/category_state.js","categoryList.js","reducer/modal_state.js","modal.js","modal_mobile.js","App.js","reportWebVitals.js","reducer/index.js","index.js","modal.module.css","modal_mobile.module.css","styles.module.css"],"names":["LoadingSpinner","props","className","CircularProgress","color","Dbdb","submitId","post","test","state","testbody","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","console","log","text","setState","onCall","ban_list","error","a","d","data","category_name","life","Swal","fire","icon","title","width","padding","background","footer","backdrop","this","onClick","Component","connect","category","category_data","ACT","intialState","deleteCount","type","action","Button","id","dispatch","useDispatch","c_data","useSelector","e","ban","document","querySelector","target","includes","innerHTML","querySelectorAll","i","item","addEventListener","path","childNodes","remove","splice","indexOf","length","push","ButtonList","map","index","CHANGE","modal","changeModalState","Modal","modal_state","useState","modalOn","setModalOn","handleModal","setTimeout","style","height","useEffect","createPortal","CSSTransition","in","timeout","classNames","styles","categoryModal","unmountOnExit","parent","child","stopPropagation","exit","Modalmobile","App","loading","setLoading","setCategory_data","useSpring","loop","reverse","config","wobbly","from","rotateZ","to","open","toggle","useMeasure","ref","prop","backgroundColor","duration","isMobileDevice","useMediaQuery","query","list","result","list_data","marginRight","h1","main","div","fill","content","x","Math","floor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","getState","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.08b11eaa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect, Component } from \"react\";\r\n// import PetsIcon from '@material-ui/icons/Pets';\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport \"./loadingSpinner.css\";\r\n\r\nconst LoadingSpinner = (props) => {\r\n  return (\r\n    <div className=\"loading\">\r\n      <p>점심 나가서 먹을거 가테~</p>\r\n      <CircularProgress color=\"secondary\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst mapStateToProps = (state) => ({ ban_list: state.category.category_data });\r\n\r\nclass Dbdb extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      life: 3,\r\n    };\r\n  }\r\n\r\n  // db삽입\r\n  submitId = () => {\r\n    const post = {\r\n      test: this.state.testbody,\r\n    };\r\n\r\n    fetch(\"http://localhost:3001/api\", {\r\n      method: \"post\", // 통신방법\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n      body: JSON.stringify(post),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json.text);\r\n        this.setState({\r\n          testbody: json.text,\r\n        });\r\n      });\r\n  };\r\n\r\n  onCall = () => {\r\n    // 금지된 항목 props에 잘 들어옴\r\n    console.log(this.props.ban_list);\r\n    fetch(\"http://127.0.0.1:3001/api\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        ban_list: this.props.ban_list,\r\n      }),\r\n    }).then(async (res, error) => {\r\n      console.log(res);\r\n      console.log(error);\r\n      const d = await res.json();\r\n      console.log(d);\r\n      this?.setState({\r\n        data: d.category_name,\r\n      });\r\n      this.setState({ life: this.state.life - 1 });\r\n      if (this.state.life === 0) {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"고민하지마세요...\",\r\n          text: \"카테고리와 음식을 조금 더 금지 시켜 주세요...\",\r\n          width: 600,\r\n          padding: \"3em\",\r\n          color: \"#716add\",\r\n          background:\r\n            \"url(https://cdn.pixabay.com/photo/2020/02/20/17/57/flower-4865379_960_720.png) #fff \",\r\n          footer: \"\",\r\n          backdrop: `\r\n            rgba(0,0,123,0.4)\r\n            \r\n            no-repeat\r\n            `,\r\n        });\r\n        this.setState({ life: 3 });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>{this.state?.data}</h2>\r\n        <button onClick={this.onCall}>bring</button>\r\n        <div>\r\n          <p>아직까지 고민하시나요?</p>\r\n          <p>계속돌려도 선택장애는 없어지지 않습니다!!!</p>\r\n          <p>{this.state.life}번 안에 나온걸로 먹으로 가세요!!</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// function onDataHandler() {\r\n//   const axiosSet = axios.create({\r\n//     baseURL: \"http://localhost:3001\", //node server의 url\r\n//     headers: {\r\n//       \"Content-Type\": \"application/json; charset=UTF-8\",\r\n//     },\r\n//     responseType: \"json\",\r\n//     responseEncoding: \"json\",\r\n//   });\r\n//   const res = axiosSet.get(\"/api\");\r\n//   console.log(res.data);\r\n// }\r\nexport default connect(mapStateToProps)(Dbdb);\r\n","// 액션 작성\r\nexport const ACT = \"DELETE\";\r\n\r\n// 초기상태 정의\r\nexport const intialState = {\r\n  category_data: [],\r\n};\r\n\r\n// 액션 생성함수 정의\r\nexport const deleteCount = (category_data) => ({ type: ACT, category_data });\r\n// 리듀서 작성\r\nconst category = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case ACT:\r\n      return {\r\n        ...state,\r\n        category_data: action.category_data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default category;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteCount } from \"./reducer/category_state\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst ban_list = [];\r\n\r\nfunction Button({ id }) {\r\n  //\r\n  const dispatch = useDispatch();\r\n  const c_data = useSelector((state) => state.category.category_data);\r\n\r\n  const onBanned = (e) => {\r\n    const ban = document.querySelector(\".ban\");\r\n    dispatch(deleteCount(ban_list));\r\n    console.log(c_data);\r\n    console.log(e.target.id);\r\n    console.log(ban_list);\r\n    // 금지된 list에 값이 들어가 있지 않을때\r\n    if (ban_list.includes(e.target.id) === false) {\r\n      ban.innerHTML +=\r\n        '<span class=\"del_box\">' +\r\n        e.target.id +\r\n        '<button class=\"del\" >' +\r\n        \"X\" +\r\n        \"</button>\" +\r\n        \"</span>\";\r\n\r\n      const a = document.querySelectorAll(\".del_box\");\r\n      for (let i = 0; i < a.length; i++) {\r\n        const item = a.item(i);\r\n        item.addEventListener(\"click\", function (e) {\r\n          console.log(e.path[1].childNodes[0].data);\r\n          item.remove();\r\n          ban_list.splice(ban_list.indexOf(e.path[1].childNodes[0].data), 1);\r\n        });\r\n      }\r\n      ban_list.push(e.target.id);\r\n      // dispatch();\r\n    } else {\r\n      Swal.fire({\r\n        title: \"이미 먹고싶지 않은 항목입니다!\",\r\n        // text: \"\",\r\n        width: 600,\r\n        padding: \"3em\",\r\n        color: \"#716add\",\r\n        background:\r\n          \"url(https://cdn.pixabay.com/photo/2020/02/20/17/57/flower-4865379_960_720.png) #fff \",\r\n        footer: \"\",\r\n        backdrop: `\r\n          rgba(0,0,123,0.4)\r\n          \r\n          no-repeat\r\n          `,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button id={id} onClick={onBanned}>\r\n      {id}\r\n    </button>\r\n  );\r\n}\r\nfunction ButtonList({ category }) {\r\n  return (\r\n    <div>\r\n      {category.map((data, index) => (\r\n        <Button id={data} key={index}></Button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\nexport default ButtonList;\r\n","// 액션 작성\r\nexport const CHANGE = \"CHANGE\";\r\n\r\n// 초기상태 정의\r\nexport const intialState = {\r\n  modal: false,\r\n};\r\n\r\n// 액션 생성함수 정의\r\nexport const changeModalState = (modal) => ({ type: CHANGE, modal });\r\n// 리듀서 작성\r\nconst modal = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE:\r\n      return {\r\n        ...state,\r\n        modal: !action.modal,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default modal;\r\n","import { createPortal } from \"react-dom\";\r\nimport $ from \"jquery\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Dbdb from \"./dbdb\";\r\nimport styles from \"./modal.module.css\";\r\nimport \"./modal_btn.css\";\r\nimport ButtonList from \"./categoryList\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeModalState } from \"./reducer/modal_state\";\r\nimport { deleteCount } from \"./reducer/category_state\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nfunction Modal({ category_data }) {\r\n  // Jquery사용한 버전\r\n  // useEffect(() => {\r\n  //   call();\r\n  //   setTimeout(function () {\r\n  //     // var $listTbody = $(\".categorys \");\r\n  //     console.log(category_data);\r\n  //     console.log(Object.keys(category_data).length);\r\n  //     for (let num = 0; num < category_data.length; num++) {\r\n  //       let d = category_data[num];\r\n\r\n  //       $(\".categorys\").append(\r\n  //         \"<button id=\" + d + \">\" + category_data[num] + \"</button>\"\r\n  //       );\r\n\r\n  //       console.log(d);\r\n  //     }\r\n\r\n  //     $(\".categorys button\").on(\"click\", function () {\r\n  //       console.log($(this).attr(\"id\"));\r\n  //       let del_box = \"del_box\";\r\n  //       $(\".ban\").append(\r\n  //         '<span class=\"del_box\">' +\r\n  //           $(this).attr(\"id\") +\r\n  //           \"<button>\" +\r\n  //           \"X\" +\r\n  //           \"</button>\" +\r\n  //           \"</span>\"\r\n  //       );\r\n  //       // $(\"#ban span\").css(\"border\", \"2px solid white\");\r\n  //       $(\".ban button\").on(\"click\", function () {\r\n  //         console.log(\"delet ban\");\r\n  //         alert(\"delete\");\r\n  //       });\r\n  //     });\r\n\r\n  //     // $(\".del_box\").attr(\"class\", \"ban_box\");\r\n  //   }, 100);\r\n  // }, []);\r\n  const dispatch = useDispatch();\r\n  const modal_state = useSelector((state) => state.modal.modal);\r\n  let ban_list = useSelector((state) => state.category.category_data);\r\n\r\n  const [modalOn, setModalOn] = useState(modal_state);\r\n\r\n  //배경을 원래대로 돌려주는 함수\r\n  // const handleBackground = () => {\r\n  //   let background = document.querySelector(\"#root\");\r\n  //   background.style.background = \"\";\r\n  //   background.style.opacity = \"\";\r\n  // };\r\n\r\n  const handleModal = (e) => {\r\n    dispatch(changeModalState(modal_state));\r\n    setModalOn(false);\r\n    // handleBackground();\r\n    setTimeout(() => {\r\n      document.querySelector(\"#root\").style.height = \"100%\";\r\n      document.querySelector(\"#modal\").style.height = \"0%\";\r\n    }, 304);\r\n  };\r\n  useEffect(() => {\r\n    document.querySelector(\"#root\").style.height = \"0%\";\r\n    document.querySelector(\"#modal\").style.height = \"100%\";\r\n\r\n    // 모달창 밖의 영역을 클릭하더라도 모달창이 닫힐 수 있게 만듬\r\n    // document.querySelector(\"#modal\").addEventListener(\"click\", function () {\r\n    //   handleModal();\r\n    // });\r\n\r\n    const ban = document.querySelector(\".ban\");\r\n    // store내의 금지된 항목의 상태를 가져와서 모달창을 다시 열었을때도 금지된 항목을 볼수 있도록함\r\n    for (let i = 0; i < ban_list.length; i++) {\r\n      ban.innerHTML +=\r\n        '<span class=\"del_box\">' +\r\n        ban_list[i] +\r\n        '<button class=\"del\" >' +\r\n        \"X\" +\r\n        \"</button>\" +\r\n        \"</span>\";\r\n      const a = document.querySelectorAll(\".del_box\");\r\n      for (let i = 0; i < a.length; i++) {\r\n        const item = a.item(i);\r\n        item.addEventListener(\"click\", function (e) {\r\n          console.log(e.path[1].childNodes[0].data);\r\n          item.remove();\r\n          ban_list.splice(ban_list.indexOf(e.path[1].childNodes[0].data), 1);\r\n          dispatch(deleteCount(ban_list));\r\n        });\r\n      }\r\n    }\r\n  }, []);\r\n  return createPortal(\r\n    // modalOn ? (\r\n    //   // <CSSTransition\r\n    //   //   in={modalOn}\r\n    //   //   timeout={300}\r\n    //   //   classNames=\"categoryModal\"\r\n    //   //   unmountOnExit\r\n    //   // >\r\n    //   <div className={styles.parent} onClick={handleModal}>\r\n    //     {/* event.stopPropagation()이벤트가 캡처링/버블링 단계에서 더 이상 전파되지 않도록 방지 */}\r\n    //     <div className={styles.child} onClick={(e) => e.stopPropagation()}>\r\n    //       <div className={styles.exit}>\r\n    //         <button onClick={handleModal}>X</button>\r\n    //       </div>\r\n    //       <h2>먹고 싶지 않은 카테고리 선택</h2>\r\n    //       <div className={\"categorys\"}>\r\n    //         <ButtonList category={category_data}></ButtonList>\r\n    //       </div>\r\n    //       <div className={\"ban\"}>\r\n    //         <p>제외된 항목: </p>\r\n    //       </div>\r\n    //       <Dbdb></Dbdb>\r\n    //     </div>\r\n    //   </div>\r\n    // ) : (\r\n    //   \"\"\r\n    // ),\r\n    <CSSTransition\r\n      in={modalOn}\r\n      timeout={300}\r\n      classNames={styles.categoryModal}\r\n      unmountOnExit\r\n    >\r\n      <div className={styles.parent} onClick={handleModal}>\r\n        {/* event.stopPropagation()이벤트가 캡처링/버블링 단계에서 더 이상 전파되지 않도록 방지 */}\r\n        <div className={styles.child} onClick={(e) => e.stopPropagation()}>\r\n          <div className={styles.exit}>\r\n            <button onClick={handleModal}>X</button>\r\n          </div>\r\n          <h2>먹고 싶지 않은 카테고리 선택</h2>\r\n          <div className={\"categorys\"}>\r\n            <ButtonList category={category_data}></ButtonList>\r\n          </div>\r\n          <div className={\"ban\"}>\r\n            <p>제외된 항목: </p>\r\n          </div>\r\n          <Dbdb></Dbdb>\r\n        </div>\r\n      </div>\r\n    </CSSTransition>,\r\n    document.querySelector(\"#modal\")\r\n  );\r\n}\r\nexport default Modal;\r\n","import { createPortal } from \"react-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Dbdb from \"./dbdb\";\r\nimport styles from \"./modal_mobile.module.css\";\r\nimport \"./modal_btn.css\";\r\nimport ButtonList from \"./categoryList\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeModalState } from \"./reducer/modal_state\";\r\nimport { deleteCount } from \"./reducer/category_state\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nfunction Modalmobile({ category_data }) {\r\n  const dispatch = useDispatch();\r\n  const modal_state = useSelector((state) => state.modal.modal);\r\n  let ban_list = useSelector((state) => state.category.category_data);\r\n\r\n  const [modalOn, setModalOn] = useState(modal_state);\r\n\r\n  const handleModal = (e) => {\r\n    dispatch(changeModalState(modal_state));\r\n    setModalOn(false);\r\n    setTimeout(() => {\r\n      document.querySelector(\"#root\").style.height = \"100%\";\r\n      document.querySelector(\"#modal\").style.height = \"0%\";\r\n    }, 304);\r\n  };\r\n  useEffect(() => {\r\n    document.querySelector(\"#root\").style.height = \"0%\";\r\n    document.querySelector(\"#modal\").style.height = \"100%\";\r\n\r\n    const ban = document.querySelector(\".ban\");\r\n    // store내의 금지된 항목의 상태를 가져와서 모달창을 다시 열었을때도 금지된 항목을 볼수 있도록함\r\n    for (let i = 0; i < ban_list.length; i++) {\r\n      ban.innerHTML +=\r\n        '<span class=\"del_box\">' +\r\n        ban_list[i] +\r\n        '<button class=\"del\" >' +\r\n        \"X\" +\r\n        \"</button>\" +\r\n        \"</span>\";\r\n      const a = document.querySelectorAll(\".del_box\");\r\n      for (let i = 0; i < a.length; i++) {\r\n        const item = a.item(i);\r\n        item.addEventListener(\"click\", function (e) {\r\n          console.log(e.path[1].childNodes[0].data);\r\n          item.remove();\r\n          ban_list.splice(ban_list.indexOf(e.path[1].childNodes[0].data), 1);\r\n          dispatch(deleteCount(ban_list));\r\n        });\r\n      }\r\n    }\r\n  }, []);\r\n  return createPortal(\r\n    <CSSTransition\r\n      in={modalOn}\r\n      timeout={300}\r\n      classNames={styles.categoryModal}\r\n      unmountOnExit\r\n    >\r\n      <div className={styles.parent} onClick={handleModal}>\r\n        {/* event.stopPropagation()이벤트가 캡처링/버블링 단계에서 더 이상 전파되지 않도록 방지 */}\r\n        <div className={styles.child} onClick={(e) => e.stopPropagation()}>\r\n          <div className={styles.exit}>\r\n            <button onClick={handleModal}>X</button>\r\n          </div>\r\n          <h2>먹고 싶지 않은 카테고리 선택</h2>\r\n          <div className={\"categorys\"}>\r\n            <ButtonList category={category_data}></ButtonList>\r\n          </div>\r\n          <div className={\"ban\"}>\r\n            <p>제외된 항목: </p>\r\n          </div>\r\n          <Dbdb></Dbdb>\r\n        </div>\r\n      </div>\r\n    </CSSTransition>,\r\n    document.querySelector(\"#modal\")\r\n  );\r\n}\r\nexport default Modalmobile;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"./mapContainer\";\nimport \"./randomSelect\";\nimport React, { useState, useEffect, Component } from \"react\";\nimport MapContainer from \"./mapContainer\";\nimport LoadingSpinner from \"./loadingSpinner\";\nimport \"./dbdb\";\nimport Modal from \"./modal\";\nimport Modalmobile from \"./modal_mobile\";\nimport styles from \"./styles.module.css\";\n\n// redux사용\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeModalState } from \"./reducer/modal_state\";\n\n//react-spring 사용\nimport { useSprings, animated, useSpring, config } from \"react-spring\";\nimport useMeasure from \"react-use-measure\";\n\n//react-transition-group 사용\nimport { CSSTransition } from \"react-transition-group\";\n\n// react responsive 사용\nimport { useMediaQuery } from \"react-responsive\";\n\n// animate.css 사용\nimport \"animate.css\";\n\n// class Food extends Component {\n//   render() {\n//     // 랜덤하게 하는것을 메서드화\n//     function getRandomInt(min, max) {\n//       min = Math.ceil(min);\n//       max = Math.floor(max);\n//       return Math.floor(Math.random() * (max - min)) + min; //최댓값은 제외, 최솟값은 포함\n//     }\n\n//     // 랜덤을 변수로\n//     // let select = category[Math.floor(Math.random() * category.length)];\n//     return <p>{category[getRandomInt(0, category.length)]}</p>;\n//   }\n// }\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [category_data, setCategory_data] = useState([]);\n  // react-spring\n  const style = useSpring({\n    loop: { reverse: true },\n    config: config.wobbly /*{ friction: 5 }*/,\n    from: { rotateZ: -20 },\n    to: { rotateZ: 20 },\n  });\n\n  const [open, toggle] = useState(false);\n  const [ref, { width }] = useMeasure();\n  const prop = useSpring({\n    width: open ? width : 0,\n    backgroundColor: open ? \"turquoise\" : \"lightblue\",\n    config: { duration: 1000 },\n  });\n\n  // react-responsive for mobile\n  const isMobileDevice = useMediaQuery({ query: \"(max-width: 900px)\" });\n\n  //DB로 부터 카테고리를 받아오는 함수\n  let list = [];\n  const call = () =>\n    fetch(\"http://127.0.0.1:3001/category_list\", {\n      method: \"post\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify(),\n    }).then(async (result, error) => {\n      console.log(result);\n      console.log(error);\n      let list_data = await result.json();\n      console.log(list_data);\n      for (let i = 0; i < list_data.length; i++) {\n        list[i] = list_data[i].category_name;\n      }\n      setCategory_data(list);\n    });\n\n  //모달창이 떳을경우 배경을 흐리고 어둡게 만들어 주는 함수\n  // const handleBackground = () => {\n  //   // document.querySelector(\"#root\").style.height = \"100%\";\n  //   // document.querySelector(\"#modal\").style.height = \"100%\";\n  //   let background = document.querySelector(\"#root\");\n  //   background.style.background = \"rgba(0, 0, 0, 0.2)\";\n  //   background.style.opacity = \"0.5\";\n  // };\n\n  useEffect(() => {\n    setTimeout(() => {\n      call();\n      setLoading(false);\n    }, 1000);\n  }, []);\n  //redux를 이용하여 state저장\n  const dispatch = useDispatch();\n  const modal_state = useSelector((state) => state.modal.modal);\n\n  function onCall(e) {\n    toggle(!open);\n    setTimeout(() => {\n      //모달창 상태를 저장\n      dispatch(changeModalState(modal_state));\n      setTimeout(() => {\n        toggle(open);\n      }, 300);\n      // handleBackground();\n    }, 1100);\n  }\n  return loading ? (\n    <LoadingSpinner />\n  ) : (\n    <div className=\"App\">\n      <div className={styles.title}>\n        <h1 className=\"lunch\" style={{ marginRight: \"2.5%\" }}>\n          점심뭐먹지\n        </h1>\n        <animated.h1 style={style}>?</animated.h1>\n      </div>\n\n      <button onClick={onCall}>START</button>\n      <div ref={ref} className={styles.main} onClick={() => toggle(!open)}>\n        <animated.div className={styles.fill} style={prop} />\n        <animated.div className={styles.content}>\n          {prop.width.to((x) => Math.floor((x * 100) / width) + \"%\")}\n        </animated.div>\n      </div>\n      <CSSTransition\n        in={modal_state}\n        timeout={300}\n        classNames=\"categoryModal\"\n        unmountOnExit\n      >\n        {isMobileDevice ? (\n          <Modalmobile category_data={category_data}></Modalmobile>\n        ) : (\n          <Modal category_data={category_data}></Modal>\n        )}\n      </CSSTransition>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore } from \"redux\";\r\nimport category from \"./category_state\";\r\nimport modal from \"./modal_state\";\r\n\r\nconst rootReducer = combineReducers({\r\n  category,\r\n  modal,\r\n});\r\n// 리덕스 개발자도구 적용\r\nconst devTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n// store 만들고 현재 값 확인\r\nconst store = createStore(rootReducer, devTools);\r\nconsole.log(store.getState());\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n// redux 사용을 위한 create store 와 루트 리듀서 불러오기\nimport { createStore } from \"redux\";\nimport store from \"./reducer\";\nimport { Provider } from \"react-redux\";\n\n//react-redux 라이브러리 안에 들어있는 Provider 를 사용하여 리액트 프로젝트에 스토어 연동\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// 원래 render\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById(\"root\")\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"parent\":\"modal_parent__2qDsP\",\"exit\":\"modal_exit__1nITZ\",\"child\":\"modal_child__PSnp_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"parent\":\"modal_mobile_parent__3YFJM\",\"exit\":\"modal_mobile_exit__1zJue\",\"child\":\"modal_mobile_child__NW7k4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__BS1Jt\",\"main\":\"styles_main__2L_8L\",\"fill\":\"styles_fill__1dhVC\",\"content\":\"styles_content__1amCX\"};"],"sourceRoot":""}